#BlueJ class context
comment0.params=alto\ ancho
comment0.target=Imagen(int,\ int)
comment0.text=\ Crea\ una\ imagen\ de\ dimension\ alto\ x\ ancho\ todav\uFFFDa\ sin\ pixels\n\ \ @param\ alto,\ el\ n\uFFFDmero\ de\ filas\ de\ la\ imagen\n\ \ @param\ ancho,\ el\ n\uFFFDmero\ de\ columnas\ de\ la\ imagen\n
comment1.params=in\ alto\ ancho\ fhash
comment1.target=Imagen(java.io.DataInputStream,\ int,\ int,\ int)
comment1.text=\ Crea\ una\ imagen\ de\ dimensi\uFFFDn\ alto\ x\ ancho\ cuyos\ pixeles\ se\ leen\ del\ fichero\ in.\ \n\ \ Se\ utiliza\ como\ funcion\ de\ dispersion\ fhash.\n\ \ Para\ cada\ pixel\ se\ guarda\ la\ componente\ roja,\ verde\ y\ azul\ (1\ byte\ sin\ signo\ por\ cada\ una)\n\ \ @param\ in\ el\ fichero\ de\ im\uFFFDgenes\n\ \ @param\ alto,\ el\ n\uFFFDmero\ de\ filas\ de\ la\ imagen\n\ \ @param\ ancho,\ el\ n\uFFFDmero\ de\ columnas\ de\ la\ imagen\n\ \ @param\ fhash,\ funci\uFFFDn\ de\ dispersi\uFFFDn\ a\ utilizar\:\ SUMA_TODOS\ (0),\ SUMA_PONDERADA_TODOS\ (1),\ SUMA_TRES\ (2),\ SUMA_PONDERADA_TRES\ (3)\n
comment10.params=
comment10.target=int\ valorHashSumaPonderadaTodos()
comment11.params=
comment11.target=int\ valorHashSumaTodos()
comment12.params=
comment12.target=int\ valorHashSumaPonderada3()
comment13.params=
comment13.target=int\ valorHashSuma3()
comment2.params=alto\ ancho\ fhash
comment2.target=Imagen(int,\ int,\ int)
comment2.text=\ Crea\ una\ imagen\ de\ dimensi\uFFFDn\ alto\ x\ ancho\ cuyos\ pixeles\ se\ generan\ de\ forma\ aleatoria.\ \n\ \ Se\ utiliza\ como\ funcion\ de\ dispersion\ fhash.\n\ \ @param\ alto,\ el\ n\uFFFDmero\ de\ filas\ de\ la\ imagen\n\ \ @param\ ancho,\ el\ n\uFFFDmero\ de\ columnas\ de\ la\ imagen\n\ \ @param\ fhash,\ funci\uFFFDn\ de\ dispersi\uFFFDn\ a\ utilizar\:\ SUMA_TODOS\ (0),\ SUMA_PONDERADA_TODOS\ (1),\ SUMA_TRES\ (2),\ SUMA_PONDERADA_TRES\ (3)\n
comment3.params=
comment3.target=int\ getAlto()
comment3.text=\ Devuelve\ la\ altura\ de\ la\ imagen\ \n\ @return\ int,\ el\ n\uFFFDmero\ de\ filas\ de\ la\ imagen\n
comment4.params=
comment4.target=int\ getAncho()
comment4.text=\ Devuelve\ la\ anchura\ de\ la\ imagen\ \n\ @return\ int,\ el\ n\uFFFDmero\ de\ columnas\ de\ la\ imagen\n
comment5.params=x\ y
comment5.target=Pixel\ getPixel(int,\ int)
comment5.text=\ Devuelve\ el\ pixel\ que\ ocupa\ la\ posicion\ (x,y)\ \n\ @param\ x,\ fila\n\ @param\ y,\ columna\n\ @return\ Pixel,\ el\ que\ ocupa\ la\ celda\ (x,y)\n
comment6.params=
comment6.target=java.lang.String\ toString()
comment6.text=Devuelve\ la\ descripcion\ de\ la\ imagen\ en\ formato\ ppm\ ascii
comment7.params=img
comment7.target=boolean\ equals(java.lang.Object)
comment7.text=\ Devuelve\ true\ si\ img\ es\ una\ Imagen\ igual\ que\ this\ y\ false\ en\ caso\ contrario\ \n\ \ @param\ img,\ Imagen\ a\ comparar\ con\ esta\n\ \ @return\ boolean,\ true\ si\ this\ Imagen\ es\ igual\ a\ img\ y\ false\ en\ caso\ contrario\n
comment8.params=
comment8.target=int\ hashCode()
comment8.text=\ Devuelve\ el\ valor\ de\ hashing\ de\ la\ imagen.\n\ \ @return\ int,\ valor\ de\ dispersi\uFFFDn\n
comment9.params=fHash
comment9.target=int\ obtieneValorHash(int)
numComments=14
